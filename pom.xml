<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>jGeohash</groupId>
  <artifactId>jgeohash</artifactId>
  <version>1.4.2</version>


	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<github.global.server>github</github.global.server>
		<testng.version>6.8.5</testng.version>
	</properties>

	<build>

		<sourceDirectory>src/main/java</sourceDirectory>
		<testSourceDirectory>src/test/java</testSourceDirectory>
		<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
		<outputDirectory>target/classes</outputDirectory>
		<testOutputDirectory>target/test-classes</testOutputDirectory>

		<resources>

			<resource>
				<directory>src/main/resources</directory>
			</resource>

			<resource>
				<filtering>false</filtering>
				<directory>src/site</directory>
			</resource>

		</resources>

		<testResources>

			<testResource>
				<directory>src/test/resources</directory>
			</testResource>

		</testResources>

		<plugins>

			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<encoding>UTF-8</encoding>
					<optimize>true</optimize>
					<debug>true</debug>
				</configuration>
			</plugin>

			<!-- Configuring Maven Source Plugin: To attach source artifacts to your
				build we execute the source:jar goal from the source plugin during the package
				phase. -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>			

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<downloadSources>true</downloadSources>
					<additionalBuildcommands>
						<buildcommand>org.eclipse.m2e.core.maven2Builder</buildcommand>
					</additionalBuildcommands>
					<additionalProjectnatures>
						<projectnature>org.eclipse.m2e.core.maven2Nature</projectnature>
					</additionalProjectnatures>
				</configuration>
			</plugin>

		</plugins>

	</build>	
	
	<distributionManagement>

		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>

	</distributionManagement>

	<profiles>

		<profile>
			<id>deploy-on-github</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- Configuring Maven Source Plugin: To attach source artifacts to 
						your build we execute the source:jar goal from the source plugin during the 
						package phase. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>com.github.github</groupId>
						<artifactId>site-maven-plugin</artifactId>
						<version>0.7</version>
						<configuration>
							<message>Maven artifacts for ${project.version}</message>
							<!-- git commit message -->
							<noJekyll>true</noJekyll>
							<!-- disable webpage processing -->
							<merge>true</merge>
							<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory>
							<!-- matches distribution management repository url above -->
							<branch>refs/heads/mvn-repo</branch>
							<!-- remote branch name -->
							<includes>
								<include>**/*</include>
							</includes>
							<repositoryName>jgeohash</repositoryName>
							<!-- github repo name -->
							<repositoryOwner>astrapi69</repositoryOwner>
							<!-- github username -->
						</configuration>
						<executions>
							<!-- run site-maven-plugin's 'site' target as part of the build's 
								normal 'deploy' phase -->
							<execution>
								<goals>
									<goal>site</goal>
								</goals>
								<phase>deploy</phase>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.eclipse.mylyn.github</groupId>
								<artifactId>org.eclipse.egit.github.core</artifactId>
								<version>2.0.3</version>
							</dependency>
						</dependencies>
					</plugin>

				</plugins>
			</build>
		</profile>

		<profile>
			<id>release-sign-artifacts</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release-javadoc-jar-with-dependencies</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- Configuring Maven Javadoc Plugin: To attach javadoc artifacts to 
						your build we execute the javadoc:jar goal from the javadoc plugin. -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<!-- NOTE: We don't need a groupId specification because the group 
							is org.apache.maven.plugins ...which is assumed by default. -->
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
						<executions>
							<execution>
								<id>make-assembly</id>
								<!-- this is used for inheritance merges -->
								<phase>package</phase>
								<!-- append to the packaging phase. -->
								<goals>
									<goal>attached</goal>
									<!-- goals == mojos -->
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>

	</profiles>

	<dependencies>

		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>